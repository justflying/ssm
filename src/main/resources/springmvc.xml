<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


       <!--
         需要进行Spring 整合SpringMVC 吗?
         还是否加入Spring的IOC 容器 ?
         是否还需要在web.xml文件中配置启动Spring IOC容器的ContextLoaderListener ?
         1.需要：通常情况下，类似于数据源，事务，整合其他框架都是放在Spring的配置文件中（而不是放在SpringMVC的配置文件中）。
         实际上放入Spring 的配置文件对应的IOC 容器中的还有Service和Dao。
         2.不需要：都放在SpringMVC的配置文件中，也可以分多个Spring配置文件，然后使用import节点导入其他的配置文件。
       -->
       <!--
          问题：若Spring的IOC容器和 SpringMVC的IOC容器扫描的包有重合的部分，就会导致有的bean会被创建2次，
          解决：
            1.使用Spring的 IOC容器扫描的包和 SpringMVC的IOC容器扫描的包没有重合部分，
            2.使用exclude-filter和include-filter子节点来规定只能扫描的注解
       -->

       <!--
		  SpringMVC 的 IOC 容器中的 bean 可以来引用 Spring IOC 容器中的 bean.
		  返回来呢 ? 反之则不行. Spring IOC 容器中的 bean 却不能来引用 SpringMVC IOC 容器中的 bean!
		  Spring 容器  是父容器    SpringMVC是子容器
	   -->
       <mvc:default-servlet-handler/>
       <mvc:annotation-driven ></mvc:annotation-driven>
       <!--配置扫描-->
       <context:component-scan base-package="com.wanyu.learn.action" use-default-filters="false">
              <context:include-filter type="annotation" 
                expression="org.springframework.stereotype.Controller" />
              <context:include-filter type="annotation"
                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
       </context:component-scan>
       <!--配置视图解析器-->
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
           <property name="prefix" value="/"></property>
           <property name="suffix" value=".jsp"></property>
       </bean>
       <!--配置消息转换-->
       <mvc:annotation-driven>
              <mvc:message-converters>
                     <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                            <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
                     </bean>
              </mvc:message-converters>
       </mvc:annotation-driven>
       <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
       <bean id="multipartResolver"
             class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <!-- 默认编码 -->
              <property name="defaultEncoding" value="utf-8" />
              <!-- 文件大小最大值 -->
              <property name="maxUploadSize" value="10485760000" />
              <!-- 内存中的最大值 -->
              <property name="maxInMemorySize" value="40960" />
       </bean>
       <mvc:resources mapping="/static/**" location="/static/"/>
</beans>